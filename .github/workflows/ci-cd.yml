name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ecs-1111 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ductran2509/learn-cicd .

      - name: Push Docker Image Latest
        run: docker push ductran2509/learn-cicd:latest

      - name: Tag and Push Docker Image with SHA
        run: |
          docker tag ductran2509/learn-cicd ductran2509/learn-cicd:${{ github.sha }}
          docker push ductran2509/learn-cicd:${{ github.sha }}

      - name: Remove Local Docker Images
        run: |
          docker image rm ductran2509/learn-cicd:latest || true
          docker image rm ductran2509/learn-cicd:${{ github.sha }} || true

  deploy:
    name: Deploy to Production
    runs-on: ecs-1111  # Sử dụng self-hosted runner của bạn
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: false

      - name: Create .env File
        run: |
          # echo "NODE_ENV=${{ secrets.NODE_ENV }}" > .env
          # echo "APP_TYPE=${{ secrets.APP_TYPE }}" >> .env
          # echo "MONGODB_URL=${{ secrets.MONGODB_URL }}" >> .env
          # echo "RABBITMQ_URL=${{ secrets.RABBITMQ_URL }}" >> .env
          # echo "JWT_ALGORITHIM=${{ secrets.JWT_ALGORITHIM }}" >> .env
          # echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          # echo "RABBITMQ_QUEUE=${{ secrets.RABBITMQ_QUEUE }}" >> .env
          # echo "WORKER_TYPE=${{ secrets.WORKER_TYPE }}" >> .env

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.0
        with:
          # host: ${{ secrets.SERVER_HOST }}
          # username: ${{ secrets.SERVER_USER }}
          # key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            cd ~/my-node-app
            git pull origin main
            docker login -u ${REGISTRY_USER} -p ${REGISTRY_PASS}

            if docker ps -a | grep -q "learn-cicd-api"; then
              docker stop learn-cicd-api
              do
